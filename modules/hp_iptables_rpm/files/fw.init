#!/bin/bash
# /root/bin/fw.init
##############################################################
# DO NOT EDIT. MANAGES BY PUPPET. CHANGES WILL BE WIPED OUT. #
##############################################################
#
# Rules for HP server (production host + VM).
#
# Copyright (C) (2014) K-B.Kronlund <bkronmailbox-copyright@yahoo.se>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#------------------------------------------------------------------------------
## Basic data
# -----------------------------------------------------------------------------
IPTABLES=/sbin/iptables
MODPROBE=/sbin/modprobe
SERVICE=/sbin/service

IF_EXT="eth0"
IF_VM="virbr0"

INTNET="192.168.122.0/255.255.255.0"
INTVM1="192.168.122.41"
INTVM2="192.168.122.42"

#------------------------------------------------------------------------------
# ISP data
#------------------------------------------------------------------------------
GATEWAY="192-168.0.1"
SERVER="192.168.0.66"
PUBVM1="192.168.0.41"
PUBVM2="192.168.0.42"
#------------------------------------------------------------------------------

## rsyslog: Configured to match log prefix 'FORWARD', 'INPUT' and 
##  'OUTPUT' to separate out logs to files in /var/log/iptables/
## 
LOGOPT="LOG --log-ip-options --log-tcp-options"

## Load module (state tracking)
$MODPROBE nf_conntrack
## Load module (RELATED used for ftp, tftp, irc, sctp, amanda)
$MODPROBE nf_conntrack_ftp
## Load module to used with broadcasts/multicaste rules
$MODPROBE xt_pkttype
## Load module xt_limit to limit excessive logging on public interfaces
$MODPROBE xt_limit
RLIMIT="-m limit --limit 3/s --limit-burst 8"
## Load module to be able to give a range of ip addresses (not used yet)
## $MODPROBE xt_iprange

## Flush old rules, old custom chains and zero counters 
$IPTABLES -F
$IPTABLES -t nat -F
$IPTABLES -X
$IPTABLES -Z

#------------------------------------------------------------------------------
# Default policies
#------------------------------------------------------------------------------
$IPTABLES -P INPUT ACCEPT
$IPTABLES -P FORWARD ACCEPT
$IPTABLES -P OUTPUT ACCEPT
$IPTABLES -t nat -P PREROUTING ACCEPT
$IPTABLES -t nat -P OUTPUT ACCEPT
$IPTABLES -t nat -P POSTROUTING ACCEPT

## ============================================================================
##   LOOPBACK TRAFFIC
## ============================================================================

## Free reign to loopback interfaces
$IPTABLES -I INPUT 1 -i lo -j ACCEPT
$IPTABLES -I OUTPUT 1 -o lo -j ACCEPT

## ============================================================================
##   PRE/POST ROUTING NAT
## ============================================================================

# masquerade in-outgoing vm traffic
$IPTABLES -t nat -A PREROUTING -d $PUBVM1 -p tcp -j DNAT --to-destination $INTVM1
$IPTABLES -t nat -A PREROUTING -d $PUBVM2 -p tcp -j DNAT --to-destination $INTVM2

$IPTABLES -t nat -A POSTROUTING -s $INTVM1 ! -d $INTNET -j SNAT --to-source $PUBVM1
$IPTABLES -t nat -A POSTROUTING -s $INTVM2 ! -d $INTNET -j SNAT --to-source $PUBVM2

#==============================================================================
# INBOUND (from EXT or from VM) to FW host itself
#==============================================================================
## prevent all invalid input packages on INPUT
$IPTABLES -A INPUT -m state --state INVALID -j $LOGOPT $RLIMIT --log-prefix "INPUT DROP INVALID "
$IPTABLES -A INPUT -m state --state INVALID -j DROP

# allow all established and related traffic in
$IPTABLES -A INPUT -p all -m state --state ESTABLISHED,RELATED -j ACCEPT

## ============================================================================
##  *** DANGER *** PUBLIC INBOUND TRAFFIC TO FW *** DANGER *** (POLICY ACCEPT)
## ============================================================================

# ssh client access for management of host
$IPTABLES -A INPUT -i $IF_EXT -p tcp -m tcp --dport 22 --syn -m state --state NEW -j ACCEPT

# allow ping
$IPTABLES -A INPUT -i $IF_EXT -p icmp --icmp-type echo-request $RLIMIT -j ACCEPT

# accept (if any) multicasts 
$IPTABLES -A INPUT -i $IF_EXT -m pkttype --pkt-type multicast -j ACCEPT

# default reject external traffic to host 
$IPTABLES -A INPUT -i $IF_EXT -j $LOGOPT $RLIMIT --log-prefix "INPUT REJECT EXT2INT " 
$IPTABLES -A INPUT -i $IF_EXT -j REJECT --reject-with icmp-host-prohibited

#------------------------------------------------------------------------------
# INBOUND traffic from VMs to FW HOST
#------------------------------------------------------------------------------
$IPTABLES -A INPUT -i $IF_VM -p tcp -m tcp --dport 53 --syn -m state --state NEW -j ACCEPT
$IPTABLES -A INPUT -i $IF_VM -p udp -m udp --dport 53 -m state --state NEW -j ACCEPT

# allow inbound NTP communication
$IPTABLES -A INPUT -i $IF_VM -p udp -m udp --dport 123 -m state --state NEW -j ACCEPT

# allow all puppet client and server communication
$IPTABLES -A INPUT -i $IF_VM -p tcp -m tcp --dport 8139:8140 --syn -m state --state NEW -j ACCEPT

# allow ping
$IPTABLES -A INPUT -i $IF_VM -p icmp -j ACCEPT

# default reject other traffic from VM to internal host
$IPTABLES -A INPUT -i $IF_VM -j $LOGOPT --log-prefix "INPUT ACCEPT VM2INT "
#$IPTABLES -A INPUT -i $IF_VM -j $LOGOPT --log-prefix "INPUT REJECT VM2INT "
#$IPTABLES -A INPUT -i $IF_VM -j REJECT --reject-with icmp-host-prohibited
$IPTABLES -A INPUT -i $IF_VM -j ACCEPT


## ============================================================================
##   VM TRAFFIC (POLICY ACCEPT)
## ============================================================================

# allow established and related traffic pass in and out
$IPTABLES -A FORWARD -i $IF_VM  -o $IF_EXT -m state --state ESTABLISHED,RELATED -j ACCEPT

#------------------------------------------------------------------------------
## Internal OUTBOUND traffic (from Internal VMs --> External net)
#------------------------------------------------------------------------------

# allow ftp out
$IPTABLES -A FORWARD -i $IF_VM  -o $IF_EXT  -p tcp -m tcp --dport 21 --syn -m state --state NEW -j ACCEPT

# allow VM's DNS traffic out to external net
$IPTABLES -A FORWARD -i $IF_VM  -o $IF_EXT -p tcp -m tcp --dport 53 --syn -m state --state NEW -j ACCEPT
$IPTABLES -A FORWARD -i $IF_VM  -o $IF_EXT -p udp -m udp --dport 53 -m state --state NEW -j ACCEPT

# allow VM's http traffic out to external net
$IPTABLES -A FORWARD -i $IF_VM  -o $IF_EXT -p tcp -m tcp --dport 80 --syn -m state --state NEW -j ACCEPT

# allow VM's https traffic out to external net
$IPTABLES -A FORWARD -i $IF_VM  -o $IF_EXT -p tcp -m tcp --dport 443 --syn -m state --state NEW -j ACCEPT

# default reject other VM traffic to external net
$IPTABLES -A FORWARD -i $IF_VM  -o $IF_EXT -j $LOGOPT --log-prefix "FORWARD REJECT VM2EXT "
$IPTABLES -A FORWARD -i $IF_VM  -o $IF_EXT -j REJECT --reject-with icmp-host-prohibited


#------------------------------------------------------------------------------
##   DANGER *** INBOUND traffic (Any incoming --> Internal VMs) *** DANGER
#------------------------------------------------------------------------------

# allow established and related traffic pass in
$IPTABLES -A FORWARD -i $IF_EXT -o $IF_VM -d $INTNET -m state --state ESTABLISHED,RELATED -j ACCEPT

## prevent invalid input packages
$IPTABLES -A FORWARD -i $IF_EXT -o $IF_VM -d $INTNET -m state --state INVALID -j $LOGOPT $RLIMIT --log-prefix "FORWARD DROP INVALID "
$IPTABLES -A FORWARD -i $IF_EXT -o $IF_VM -d $INTNET -m state --state INVALID -j DROP

## few external input ports VM access rules here

# ssh client access for management of VMs
$IPTABLES -A FORWARD -i $IF_EXT -o $IF_VM -d $INTNET -p tcp -m tcp --dport 22 --syn -m state --state NEW -j ACCEPT

# external access to http server
$IPTABLES -A FORWARD -i $IF_EXT -o $IF_VM -d $INTNET -p tcp -m tcp --dport 80 --syn -m state --state NEW -j ACCEPT

# allow ping
$IPTABLES -A FORWARD -i $IF_EXT -o $IF_VM -d $INTNET -p icmp --icmp-type echo-request $RLIMIT -j ACCEPT

## default reject external traffic to VMs
$IPTABLES -A FORWARD -i $IF_EXT  -o $IF_VM -d $INTNET -j $LOGOPT $RLIMIT --log-prefix "FORWARD REJECT EXT2VM " 
$IPTABLES -A FORWARD -i $IF_EXT  -o $IF_VM -d $INTNET -j REJECT --reject-with icmp-host-prohibited

## ============================================================================
##    FW HOST OUTBOUND TRAFFIC (POLICY ACCEPT)
## ============================================================================

## FW OUTPUT traffic is both to External net (public) and to Internal VMs.
## Explicit shows whats are allowed out.  ##
# ---------------------------------------
$IPTABLES -A OUTPUT -p tcp -m tcp --dport 22 --syn -m state --state NEW -j ACCEPT
$IPTABLES -A OUTPUT -p tcp -m tcp --dport 43 --syn -m state --state NEW -j ACCEPT
$IPTABLES -A OUTPUT -p tcp -m tcp --dport 53 --syn -m state --state NEW -j ACCEPT
$IPTABLES -A OUTPUT -p udp -m udp --dport 53 -m state --state NEW -j ACCEPT
$IPTABLES -A OUTPUT -p udp -m udp --dport 80 -m state --state NEW -j ACCEPT
$IPTABLES -A OUTPUT -p udp -m udp --dport 123 -m state --state NEW -j ACCEPT
$IPTABLES -A OUTPUT -p udp -m udp --dport 443 -m state --state NEW -j ACCEPT

$IPTABLES -A OUTPUT -p icmp -j ACCEPT

# allow Git pulls (port 9418)
$IPTABLES -A OUTPUT -p tcp -m tcp --dport 9418 --syn -m state --state NEW -j ACCEPT

# default logs i.e. what else goes out from host
# $IPTABLES -A OUTPUT -j $LOGOPT $RLIMIT --log-prefix "OUTPUT DEFAULT LOGONLY " 

###############################################################################
# To use this, manually run:
#
#    /root/bin/fw.init
#    service iptables save
#    service iptables restart
#    iptables -L -v --line-numbers
#    iptables -t nat -L -v --line-numbers
#
###############################################################################

exit 0

